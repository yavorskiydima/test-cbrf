{"version":3,"sources":["containers/board/board.styled.js","containers/board/board.js","containers/settings/settings.styled.js","containers/settings/settings.js","containers/view/view.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","Paper","_templateObject","Row","div","_templateObject2","props","margin","Cell","_templateObject3","col","NoCell","_templateObject4","Board","_ref","board","color","changeValue","react_default","a","createElement","map","item","index1","key","cell","index2","onClick","Menu","settings_styled_templateObject","settings_styled_templateObject2","Settings","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","L","M","N","Ver","handleChange","e","setState","defineProperty","target","name","value","inherits","createClass","isNaN","String","includes","_this$state","getValidationState","_this2","_this$state2","settings_styled_Container","TextField_default","error","id","label","variant","onChange","Button_default","disabled","getDisableButton","handleClick","Number","isBoardClear","onClickCheck","auto","Component","View","data","Paper_default","style","width","Table_default","TableHead_default","TableRow_default","TableCell_default","rowSpan","colSpan","align","TableBody_default","row","component","scope","ver","allDomain","notOne","allCell","allOne","getRandomColor","i","Math","floor","random","App","stat","arr","tempArr","j","push","x","y","toConsumableArray","checkDomain","updateStat","undefined","colorDomain","flat","all","filter","v","indexOf","lastIndexOf","slice","b","settings_Settings","board_Board","view_View","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b85670f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport const Container = styled(Paper)`\n  display: table;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-top: 30px;\n  padding-bottom: 10px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  margin-top: -19px;\n  margin-left: ${props => props.margin}px;\n`;\n\nexport const Cell = styled.div`\n  position: relative;\n  cursor: pointer;\n  min-width: 60px;\n  max-width: 60px;\n  min-height: 34.64px;\n  max-height: 34.64px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.col};\n  margin: 17.32px 0;\n  border-left: solid 1px #333333;\n  border-right: solid 1px #333333;\n  span {\n    z-index: 3;\n  }\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    width: 42.43px;\n    height: 42.43px;\n    -webkit-transform: scaleY(0.5774) rotate(-45deg);\n    -ms-transform: scaleY(0.5774) rotate(-45deg);\n    transform: scaleY(0.5774) rotate(-45deg);\n    background-color: inherit;\n    left: 7.7868px;\n  }\n  &:before {\n    top: -21.2132px;\n    border-top: solid 1.4142px #333333;\n    border-right: solid 1.4142px #333333;\n  }\n  &:after {\n    bottom: -21.2132px;\n    border-bottom: solid 1.4142px #333333;\n    border-left: solid 1.4142px #333333;\n  }\n`;\n\nexport const NoCell = styled.div`\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  box-sizing: border-box;\n`;\n","import React from \"react\";\r\nimport { Container, Row, NoCell, Cell, } from './board.styled'\r\n\r\nexport const Board = ({ board, color, changeValue }) => (\r\n  <Container>\r\n    {board.map((item, index1) => (\r\n      <Row key={index1} margin={index1 * 30}>\r\n        {item.map((cell, index2) =>\r\n          cell === null ? (\r\n            <NoCell key={index2} />\r\n          ) : (\r\n              <Cell\r\n                key={index2}\r\n                col={color[index1][index2]}\r\n                onClick={() => changeValue(index1, index2)}\r\n              >\r\n                <span>{cell}</span>\r\n              </Cell>\r\n            )\r\n        )}\r\n      </Row>\r\n    ))}\r\n  </Container>\r\n)\r\n","import styled from \"styled-components\";\n\nexport const Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  margin: 20px;\n`;\nexport const Container = styled.div`\n  display: flex;\n`;","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Menu, Container, } from './settings.styled'\r\n\r\nexport class Settings extends Component {\r\n\r\n  state = { L: 3, M: 5, N: 7, Ver: 0.5 };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  getValidationState(value) {\r\n    if (isNaN(value) || value > 35 || String(value).includes(\".\")) return true;\r\n  }\r\n\r\n  getDisableButton() {\r\n    const { L, M, N } = this.state;\r\n    if (\r\n      this.getValidationState(L) ||\r\n      this.getValidationState(M) ||\r\n      this.getValidationState(N)\r\n    )\r\n      return true;\r\n  }\r\n\r\n  render() {\r\n    const { L, M, N, Ver } = this.state;\r\n    return (\r\n      <Container>\r\n        <Menu>\r\n          <TextField\r\n            error={this.getValidationState(L)}\r\n            id=\"outlined-error\"\r\n            label=\"L\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={L}\r\n            onChange={this.handleChange}\r\n            name=\"L\"\r\n          />\r\n          <TextField\r\n            error={this.getValidationState(M)}\r\n            id=\"outlined-error\"\r\n            label=\"M\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={M}\r\n            onChange={this.handleChange}\r\n            name=\"M\"\r\n          />\r\n          <TextField\r\n            error={this.getValidationState(N)}\r\n            id=\"outlined-error\"\r\n            label=\"N\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={N}\r\n            onChange={this.handleChange}\r\n            name=\"N\"\r\n          />\r\n          <Button\r\n            disabled={this.getDisableButton()}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              this.props.handleClick(Number(L), Number(M), Number(N))\r\n            }\r\n          >\r\n            Отобразить решетку\r\n          </Button>\r\n          <Button\r\n            disabled={this.props.isBoardClear}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={this.props.onClickCheck}\r\n          >\r\n            Посчитать домены\r\n          </Button>\r\n        </Menu>\r\n        <Menu>\r\n          <TextField\r\n            error={Ver > 0.99 || Ver < 0.01 || isNaN(Ver)}\r\n            id=\"outlined-error\"\r\n            label=\"Вероятность\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={Ver}\r\n            onChange={this.handleChange}\r\n            name=\"Ver\"\r\n          />\r\n          <Button\r\n            disabled={this.props.isBoardClear || Ver > 0.99 || Ver < 0.01 || isNaN(Ver)}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => this.props.auto(Ver)}\r\n          >\r\n            АВТО\r\n          </Button>\r\n        </Menu>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport const View = ({ data, }) => (\r\n  <Paper style={{ width: \"600px\" }}>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell rowSpan={2}>Вероятность</TableCell>\r\n          <TableCell colSpan={2} align=\"right\">\r\n            Количество доменов в решётке\r\n              </TableCell>\r\n          <TableCell rowSpan={2} align=\"right\">\r\n            Количество ячеек в решётке (L;N;M), из них имеющих значение 1\r\n              </TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell align=\"right\">Всего</TableCell>\r\n          <TableCell align=\"right\">Из них односвязных</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map((row, key) => (\r\n          <TableRow key={key}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.ver}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{row.allDomain}</TableCell>\r\n            <TableCell align=\"right\">{row.notOne}</TableCell>\r\n            <TableCell align=\"right\">\r\n              {row.allCell}, {row.allOne}\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </Paper>\r\n);\r\n","import React, { Component } from \"react\";\n\nimport { Board, } from \"./containers/board\";\nimport { Settings, } from \"./containers/settings\";\nimport { View, } from \"./containers/view\";\n\nconst getRandomColor = () => {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nclass App extends Component {\n  state = { board: [], color: [], stat: [] };\n\n  handleClick = (L, M, N) => {\n    const arr = [];\n    for (let i = 1; i < L + M; i++) {\n      const tempArr = Array(N + L - 1);\n      for (let j = 1; j < N + L; j++) {\n        if (L - i >= j && i < L) {\n          tempArr[j - 1] = null;\n        } else if (i > M && i + j > M + L + N - 1) tempArr[j - 1] = null;\n        else tempArr[j - 1] = 0;\n      }\n      arr.push(tempArr);\n    }\n    this.setState({ board: arr, color: arr });\n  };\n\n  changeValue = (x, y) => {\n    const arr = [...this.state.board];\n    arr[x][y] === 0 ? (arr[x][y] = 1) : (arr[x][y] = 0);\n    this.setState({ board: arr });\n  };\n\n  checkDomain = (board, updateStat = false, ver) => {\n    const arr = board.map(a => [...a]);\n    let colorDomain = getRandomColor();\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr[0].length; j++) {\n        if (arr[i][j] === 1) {\n          color(i, j);\n          colorDomain = getRandomColor();\n        }\n      }\n    }\n\n    this.setState({ color: arr });\n\n    if (updateStat) {\n      const stat = arr.flat();\n      const all = stat.filter(\n        (v, i, a) => a.indexOf(v) === i && v !== 0 && v !== null\n      );\n      const allDomain = all.length;\n      const notOne = all.filter(a => stat.indexOf(a) !== stat.lastIndexOf(a))\n        .length;\n      const allCell = stat.filter(a => a !== null).length;\n      const allOne = stat.filter(a => a !== 0 && a !== null).length;\n\n      this.setState(state =>\n        state.stat.length > 9\n          ? {\n            stat: [\n              ...state.stat.slice(1, 10),\n              { ver: ver, allDomain, notOne, allCell, allOne }\n            ]\n          }\n          : {\n            stat: [...state.stat, { ver, allDomain, notOne, allCell, allOne }]\n          }\n      );\n    }\n\n    function color(i, j) {\n      arr[i][j] = colorDomain;\n      if (i > 0 && arr[i - 1][j] === 1) color(i - 1, j);\n      if (i > 0 && arr[i - 1][j + 1] === 1) color(i - 1, j + 1);\n      if (arr[i][j - 1] === 1) color(i, j - 1);\n      if (arr[i][j + 1] === 1) color(i, j + 1);\n      if (i < arr.length - 1 && arr[i + 1][j] === 1) color(i + 1, j);\n      if (i < arr.length - 1 && arr[i + 1][j - 1] === 1) color(i + 1, j - 1);\n    }\n  };\n\n  auto = ver => {\n    const arr = this.state.board.map(a =>\n      a.map(b => (b === null ? null : Math.random() < ver ? 1 : 0))\n    );\n    this.setState({ board: arr });\n    this.checkDomain(arr, true, ver);\n  };\n\n  onClickCheck = () => {\n    this.checkDomain(this.state.board);\n  };\n\n  render() {\n    return (\n      <div>\n        <Settings\n          handleClick={this.handleClick}\n          auto={this.auto}\n          isBoardClear={this.state.board.length === 0}\n          onClickCheck={this.onClickCheck}\n        />\n        <Board\n          board={this.state.board}\n          changeValue={this.changeValue}\n          color={this.state.color}\n        />\n        <View data={this.state.stat} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}